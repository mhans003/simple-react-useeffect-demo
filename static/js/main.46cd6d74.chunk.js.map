{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Button/Button.js","store/auth-context.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","disabled","AuthContext","React","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","useState","setIsLoggedIn","useEffect","localStorage","getItem","Provider","value","removeItem","setItem","emailReducer","state","action","val","isValid","includes","passwordReducer","trim","length","Login","formIsValid","setFormIsValid","useReducer","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","useContext","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","login","onSubmit","event","preventDefault","control","invalid","htmlFor","id","onChange","target","onBlur","actions","btn","Home","home","Navigation","ctx","nav","href","MainHeader","App","Fragment","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.46cd6d74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"control\":\"Login_control__1O9dn\",\"invalid\":\"Login_invalid__1Kvhn\",\"actions\":\"Login_actions__1b5Oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3idT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__JfAVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__2OmAM\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\n\n//Create context object which contains login state\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    //Add 'dummy' function to onLogout and onLogin just for autocomplete reference when referencing the AuthContext object.\n    onLogout: () => {},\n    onLogin: (email, password) => {}\n});\n\n//Export entire provider as named export. This contains all logic/state for authentication, using AuthContext Provider.\nexport const AuthContextProvider = props => {\n    //Use state for whether user is logged in.\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    //This code needs to be in useEffect so that it doesn't result in infinite re-rendering (only when app starts OR when dependencies change)\n    useEffect(() => {\n        //Check if user is already 'logged in' based on local storage data\n        const storedLogInData = localStorage.getItem('isLoggedIn');\n\n        //If isLoggedIn is set, simply change logged in state in React\n        if(storedLogInData === '1') {\n            setIsLoggedIn(true);\n        }\n    }, []);\n\n    const logoutHandler = () => {\n        //Use local storage\n        localStorage.removeItem('isLoggedIn');\n\n        setIsLoggedIn(false);\n    };\n\n    const loginHandler = () => {\n        //Use local storage\n        localStorage.setItem('isLoggedIn', '1');\n\n        setIsLoggedIn(true);\n    };\n\n    return (\n        <AuthContext.Provider value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthContext;","import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\n\n//Define reducer functions in orer to reference within useReducer rather than using anonymous function directly in useReducer\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return {\n      value: action.val, \n      isValid: action.val.includes('@')\n    };\n  }\n  if(action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }\n  }\n  return {\n    value: '', \n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return {\n      value: action.val, \n      isValid: action.val.trim().length > 6\n    };\n  }\n  if(action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    }\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = () => {\n  //Set state for form validity overall \n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //Define email state using useReducer (groups value and validity)\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n\n  //Define password state using useReducer (groups value and validity)\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n\n  //Use context to refer to login state for app\n  const authCtx = useContext(AuthContext);\n\n  //Destructure just the validity state for password and email; Used for dependency in useEffect when validity changes.\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  //Use useEffect to validate form (cannot be sumbitted if not valid) again when password or email changes\n  useEffect(() => {\n    //Only check form validity if there is a 500 ms pause between keystrokes\n    const identifier = setTimeout(() => {\n      setFormIsValid(\n        //Both email and password must be valid for form to be valid.\n        emailState.isValid && passwordState.isValid\n      );\n    }, 500);\n\n    //Use clean up function to run before next execution\n    return () => {\n      //Prevent setFormIsValid from running from last iteration.\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    //Set the login state at the level of the app (using Context).\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport Button from '../UI/Button/Button';\nimport classes from './Home.module.css';\nimport AuthContext from '../../store/auth-context';\n\nconst Home = () => {\n  //Use context to refer to logout function\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n      <Button onClick={authCtx.onLogout}>Logout</Button>\n    </Card>\n  );\n};\n\nexport default Home;\n","//Import useContext hook\nimport React, { useContext } from 'react';\n\nimport classes from './Navigation.module.css';\n\n//Import login context\nimport AuthContext from '../../store/auth-context';\n\nconst Navigation = () => {\n  //Bring in the login state\n  const ctx = useContext(AuthContext);\n\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {ctx.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {ctx.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )}\n        {ctx.isLoggedIn && (\n          <li>\n            <button onClick={ctx.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation/>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  //Bring in the app context (login state)\n  const ctx = useContext(AuthContext);\n\n  return (\n    <React.Fragment>\n      <MainHeader/>\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n//Wrap entire App component in the AuthContext Provider (login state)\nimport { AuthContextProvider } from './store/auth-context';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <AuthContextProvider>\n        <App />\n    </AuthContextProvider>\n);\n"],"sourceRoot":""}