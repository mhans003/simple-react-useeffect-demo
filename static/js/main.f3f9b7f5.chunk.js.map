{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Button/Button.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","disabled","emailReducer","state","action","value","val","isValid","includes","passwordReducer","trim","length","Login","useState","formIsValid","setFormIsValid","useReducer","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","useEffect","identifier","setTimeout","clearTimeout","login","onSubmit","event","preventDefault","onLogin","control","invalid","htmlFor","id","onChange","target","onBlur","actions","btn","Home","home","Navigation","nav","isLoggedIn","href","onLogout","MainHeader","isAuthenticated","App","setIsLoggedIn","localStorage","getItem","logoutHandler","Fragment","email","password","setItem","ReactDOM","createRoot","document","getElementById","render"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,QAAU,uBAAuB,QAAU,yB,mBCA3HD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,IAAM,0B,gBCAxBD,EAAOC,QAAU,CAAC,cAAc,kC,yICSjBC,EANF,SAACC,GACZ,OACE,qBAAKC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,WAAzC,SAAuDD,EAAMI,Y,gCCWlDC,EAbA,SAACL,GACd,OACE,wBACEM,KAAMN,EAAMM,MAAQ,SACpBL,UAAS,UAAKC,IAAQK,OAAb,YAAuBP,EAAMC,WACtCO,QAASR,EAAMQ,QACfC,SAAUT,EAAMS,SAJlB,SAMGT,EAAMI,YCLPM,EAAe,SAACC,EAAOC,GAC3B,MAAmB,eAAhBA,EAAON,KACD,CACLO,MAAOD,EAAOE,IACdC,QAASH,EAAOE,IAAIE,SAAS,MAGd,eAAhBJ,EAAON,KACD,CACLO,MAAOF,EAAME,MACbE,QAASJ,EAAME,MAAMG,SAAS,MAG3B,CACLH,MAAO,GACPE,SAAS,IAIPE,EAAkB,SAACN,EAAOC,GAC9B,MAAmB,eAAhBA,EAAON,KACD,CACLO,MAAOD,EAAOE,IACdC,QAASH,EAAOE,IAAII,OAAOC,OAAS,GAGrB,eAAhBP,EAAON,KACD,CACLO,MAAOF,EAAME,MACbE,QAASJ,EAAME,MAAMK,OAAOC,OAAS,GAGlC,CACLN,MAAO,GACPE,SAAS,IAwHEK,EApHD,SAACpB,GAKb,MAAsCqB,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAAoCC,qBAAWd,EAAc,CAC3DG,MAAO,GACPE,SAAS,IAFX,mBAAOU,EAAP,KAAmBC,EAAnB,KAMA,EAA0CF,qBAAWP,EAAiB,CACpEJ,MAAO,GACPE,SAAS,IAFX,mBAAOY,EAAP,KAAsBC,EAAtB,KAMiBC,EAAiBJ,EAA1BV,QACSe,EAAoBH,EAA7BZ,QAGRgB,qBAAU,WAER,IAAMC,EAAaC,YAAW,WAC5BV,EAEEE,EAAWV,SAAWY,EAAcZ,WAErC,KAGH,OAAO,WAELmB,aAAaF,MAEd,CAACH,EAAcC,IAqClB,OACE,cAAC,EAAD,CAAM7B,UAAWC,IAAQiC,MAAzB,SACE,uBAAMC,SAPY,SAACC,GACrBA,EAAMC,iBACNtC,EAAMuC,QAAQd,EAAWZ,MAAOc,EAAcd,QAK5C,UACE,sBACEZ,UAAS,UAAKC,IAAQsC,QAAb,aACgB,IAAvBf,EAAWV,QAAoBb,IAAQuC,QAAU,IAFrD,UAKE,uBAAOC,QAAQ,QAAf,oBACA,uBACEpC,KAAK,QACLqC,GAAG,QACH9B,MAAOY,EAAWZ,MAClB+B,SAhDiB,SAACP,GAC1BX,EAAc,CAACpB,KAAM,aAAcQ,IAAKuB,EAAMQ,OAAOhC,SAgD7CiC,OA3BmB,WAC3BpB,EAAc,CAACpB,KAAM,qBA6BjB,sBACEL,UAAS,UAAKC,IAAQsC,QAAb,aACmB,IAA1Bb,EAAcZ,QAAoBb,IAAQuC,QAAU,IAFxD,UAKE,uBAAOC,QAAQ,WAAf,sBACA,uBACEpC,KAAK,WACLqC,GAAG,WACH9B,MAAOc,EAAcd,MACrB+B,SAnDoB,SAACP,GAC7BT,EAAiB,CAACtB,KAAM,aAAcQ,IAAKuB,EAAMQ,OAAOhC,SAmDhDiC,OArCsB,WAC9BlB,EAAiB,CAACtB,KAAM,qBAuCpB,qBAAKL,UAAWC,IAAQ6C,QAAxB,SACE,cAAC,EAAD,CAAQzC,KAAK,SAASL,UAAWC,IAAQ8C,IAAKvC,UAAWa,EAAzD,2B,gBC3IK2B,EARF,SAACjD,GACZ,OACE,cAAC,EAAD,CAAMC,UAAWC,IAAQgD,KAAzB,SACE,kD,gBCoBSC,EAxBI,SAACnD,GAClB,OACE,qBAAKC,UAAWC,IAAQkD,IAAxB,SACE,+BACGpD,EAAMqD,YACL,6BACE,mBAAGC,KAAK,IAAR,qBAGHtD,EAAMqD,YACL,6BACE,mBAAGC,KAAK,IAAR,qBAGHtD,EAAMqD,YACL,6BACE,wBAAQ7C,QAASR,EAAMuD,SAAvB,4B,iBCNGC,EATI,SAACxD,GAClB,OACE,yBAAQC,UAAWC,IAAQ,eAA3B,UACE,gDACA,cAAC,EAAD,CAAYmD,WAAYrD,EAAMyD,gBAAiBF,SAAUvD,EAAMuD,eCoCtDG,MAvCf,WAEE,MAAoCrC,oBAAS,GAA7C,mBAAOgC,EAAP,KAAmBM,EAAnB,KAGA5B,qBAAU,WAKe,MAHC6B,aAAaC,QAAQ,eAI3CF,GAAc,KAEf,IAEH,IASMG,EAAgB,WACpBH,GAAc,IAGhB,OACE,eAAC,IAAMI,SAAP,WACE,cAAC,EAAD,CAAYN,gBAAiBJ,EAAYE,SAAUO,IACnD,kCACIT,GAAc,cAAC,EAAD,CAAOd,QAjBR,SAACyB,EAAOC,GAK3BL,aAAaM,QAAQ,aAAc,KACnCP,GAAc,MAYTN,GAAc,cAAC,EAAD,CAAME,SAAUO,WCjC1BK,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.f3f9b7f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"control\":\"Login_control__1O9dn\",\"invalid\":\"Login_invalid__1Kvhn\",\"actions\":\"Login_actions__1b5Oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3idT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__JfAVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__2OmAM\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n//Define reducer functions in orer to reference within useReducer rather than using anonymous function directly in useReducer\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return {\n      value: action.val, \n      isValid: action.val.includes('@')\n    };\n  }\n  if(action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }\n  }\n  return {\n    value: '', \n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return {\n      value: action.val, \n      isValid: action.val.trim().length > 6\n    };\n  }\n  if(action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    }\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = (props) => {\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  //const [enteredPassword, setEnteredPassword] = useState('');\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //Define email state using useReducer (groups value and validity)\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n\n  //Define password state using useReducer (groups value and validity)\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n\n  //Destructure just the validity state for password and email; Used for dependency in useEffect when validity changes.\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  //Use useEffect to validate form (cannot be sumbitted if not valid) again when password or email changes\n  useEffect(() => {\n    //Only check form validity if there is a 500 ms pause between keystrokes\n    const identifier = setTimeout(() => {\n      setFormIsValid(\n        //Both email and password must be valid for form to be valid.\n        emailState.isValid && passwordState.isValid\n      );\n    }, 500);\n\n    //Use clean up function to run before next execution\n    return () => {\n      //Prevent setFormIsValid from running from last iteration.\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    /*\n    setFormIsValid(\n      //event.target.value.includes('@') && passwordState.trim().length > 6\n      emailState.isValid && passwordState.isValid\n    );\n    */\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n    /*\n    setFormIsValid(\n      //event.target.value.includes('@') && passwordState.trim().length > 6\n      emailState.isValid && passwordState.isValid\n    );\n    */\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\n\nconst Home = (props) => {\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport classes from './Navigation.module.css';\n\nconst Navigation = (props) => {\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <button onClick={props.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation isLoggedIn={props.isAuthenticated} onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  //Assume user is not logged in.\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //This code needs to be in useEffect so that it doesn't result in infinite re-rendering (only when app starts OR when dependencies change)\n  useEffect(() => {\n    //Check if user is already 'logged in' based on local storage data\n    const storedLogInData = localStorage.getItem('isLoggedIn');\n\n    //If isLoggedIn is set, simply change logged in state in React\n    if(storedLogInData === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n\n    //Use local storage\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}